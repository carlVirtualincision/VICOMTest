ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccePpaHC.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l0xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB42:
  26              		.file 1 "src/stm32l0xx_it.c"
   1:src/stm32l0xx_it.c **** /* USER CODE BEGIN Header */
   2:src/stm32l0xx_it.c **** /**
   3:src/stm32l0xx_it.c ****   ******************************************************************************
   4:src/stm32l0xx_it.c ****   * @file    stm32l0xx_it.c
   5:src/stm32l0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:src/stm32l0xx_it.c ****   ******************************************************************************
   7:src/stm32l0xx_it.c ****   * @attention
   8:src/stm32l0xx_it.c ****   *
   9:src/stm32l0xx_it.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:src/stm32l0xx_it.c ****   * All rights reserved.
  11:src/stm32l0xx_it.c ****   *
  12:src/stm32l0xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:src/stm32l0xx_it.c ****   * in the root directory of this software component.
  14:src/stm32l0xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:src/stm32l0xx_it.c ****   *
  16:src/stm32l0xx_it.c ****   ******************************************************************************
  17:src/stm32l0xx_it.c ****   */
  18:src/stm32l0xx_it.c **** /* USER CODE END Header */
  19:src/stm32l0xx_it.c **** 
  20:src/stm32l0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:src/stm32l0xx_it.c **** #include "main.h"
  22:src/stm32l0xx_it.c **** #include "stm32l0xx_it.h"
  23:src/stm32l0xx_it.c **** #include "../mcu-bsp/lib/inc/viccom.h"
  24:src/stm32l0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:src/stm32l0xx_it.c **** /* USER CODE BEGIN Includes */
  26:src/stm32l0xx_it.c **** /* USER CODE END Includes */
  27:src/stm32l0xx_it.c **** 
  28:src/stm32l0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:src/stm32l0xx_it.c **** /* USER CODE BEGIN TD */
  30:src/stm32l0xx_it.c **** 
  31:src/stm32l0xx_it.c **** /* USER CODE END TD */
  32:src/stm32l0xx_it.c **** 
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccePpaHC.s 			page 2


  33:src/stm32l0xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:src/stm32l0xx_it.c **** /* USER CODE BEGIN PD */
  35:src/stm32l0xx_it.c **** 
  36:src/stm32l0xx_it.c **** /* USER CODE END PD */
  37:src/stm32l0xx_it.c **** 
  38:src/stm32l0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:src/stm32l0xx_it.c **** /* USER CODE BEGIN PM */
  40:src/stm32l0xx_it.c **** 
  41:src/stm32l0xx_it.c **** /* USER CODE END PM */
  42:src/stm32l0xx_it.c **** 
  43:src/stm32l0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:src/stm32l0xx_it.c **** /* USER CODE BEGIN PV */
  45:src/stm32l0xx_it.c **** 
  46:src/stm32l0xx_it.c **** /* USER CODE END PV */
  47:src/stm32l0xx_it.c **** 
  48:src/stm32l0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:src/stm32l0xx_it.c **** /* USER CODE BEGIN PFP */
  50:src/stm32l0xx_it.c **** 
  51:src/stm32l0xx_it.c **** /* USER CODE END PFP */
  52:src/stm32l0xx_it.c **** 
  53:src/stm32l0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:src/stm32l0xx_it.c **** /* USER CODE BEGIN 0 */
  55:src/stm32l0xx_it.c **** 
  56:src/stm32l0xx_it.c **** /* USER CODE END 0 */
  57:src/stm32l0xx_it.c **** 
  58:src/stm32l0xx_it.c **** /* External variables --------------------------------------------------------*/
  59:src/stm32l0xx_it.c **** extern UART_HandleTypeDef hlpuart1;
  60:src/stm32l0xx_it.c **** /* USER CODE BEGIN EV */
  61:src/stm32l0xx_it.c **** 
  62:src/stm32l0xx_it.c **** /* USER CODE END EV */
  63:src/stm32l0xx_it.c **** 
  64:src/stm32l0xx_it.c **** /******************************************************************************/
  65:src/stm32l0xx_it.c **** /*           Cortex-M0+ Processor Interruption and Exception Handlers          */
  66:src/stm32l0xx_it.c **** /******************************************************************************/
  67:src/stm32l0xx_it.c **** /**
  68:src/stm32l0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  69:src/stm32l0xx_it.c ****   */
  70:src/stm32l0xx_it.c **** void NMI_Handler(void)
  71:src/stm32l0xx_it.c **** {
  27              		.loc 1 71 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  72:src/stm32l0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  73:src/stm32l0xx_it.c **** 
  74:src/stm32l0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  75:src/stm32l0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  76:src/stm32l0xx_it.c ****   while (1)
  34              		.loc 1 76 3 discriminator 1 view .LVU1
  77:src/stm32l0xx_it.c ****   {
  78:src/stm32l0xx_it.c ****   }
  35              		.loc 1 78 3 discriminator 1 view .LVU2
  76:src/stm32l0xx_it.c ****   {
  36              		.loc 1 76 9 discriminator 1 view .LVU3
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccePpaHC.s 			page 3


  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE42:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.code	16
  46              		.thumb_func
  47              		.fpu softvfp
  49              	HardFault_Handler:
  50              	.LFB43:
  79:src/stm32l0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  80:src/stm32l0xx_it.c **** }
  81:src/stm32l0xx_it.c **** 
  82:src/stm32l0xx_it.c **** /**
  83:src/stm32l0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  84:src/stm32l0xx_it.c ****   */
  85:src/stm32l0xx_it.c **** void HardFault_Handler(void)
  86:src/stm32l0xx_it.c **** {
  51              		.loc 1 86 1 view -0
  52              		.cfi_startproc
  53              		@ Volatile: function does not return.
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.L4:
  87:src/stm32l0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  88:src/stm32l0xx_it.c **** 
  89:src/stm32l0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  90:src/stm32l0xx_it.c ****   while (1)
  58              		.loc 1 90 3 discriminator 1 view .LVU5
  91:src/stm32l0xx_it.c ****   {
  92:src/stm32l0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  93:src/stm32l0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  94:src/stm32l0xx_it.c ****   }
  59              		.loc 1 94 3 discriminator 1 view .LVU6
  90:src/stm32l0xx_it.c ****   {
  60              		.loc 1 90 9 discriminator 1 view .LVU7
  61 0000 FEE7     		b	.L4
  62              		.cfi_endproc
  63              	.LFE43:
  65              		.section	.text.SVC_Handler,"ax",%progbits
  66              		.align	1
  67              		.global	SVC_Handler
  68              		.syntax unified
  69              		.code	16
  70              		.thumb_func
  71              		.fpu softvfp
  73              	SVC_Handler:
  74              	.LFB44:
  95:src/stm32l0xx_it.c **** }
  96:src/stm32l0xx_it.c **** 
  97:src/stm32l0xx_it.c **** /**
  98:src/stm32l0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
  99:src/stm32l0xx_it.c ****   */
 100:src/stm32l0xx_it.c **** void SVC_Handler(void)
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccePpaHC.s 			page 4


 101:src/stm32l0xx_it.c **** {
  75              		.loc 1 101 1 view -0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
 102:src/stm32l0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 103:src/stm32l0xx_it.c **** 
 104:src/stm32l0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 105:src/stm32l0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 106:src/stm32l0xx_it.c **** 
 107:src/stm32l0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 108:src/stm32l0xx_it.c **** }
  80              		.loc 1 108 1 view .LVU9
  81              		@ sp needed
  82 0000 7047     		bx	lr
  83              		.cfi_endproc
  84              	.LFE44:
  86              		.section	.text.PendSV_Handler,"ax",%progbits
  87              		.align	1
  88              		.global	PendSV_Handler
  89              		.syntax unified
  90              		.code	16
  91              		.thumb_func
  92              		.fpu softvfp
  94              	PendSV_Handler:
  95              	.LFB45:
 109:src/stm32l0xx_it.c **** 
 110:src/stm32l0xx_it.c **** /**
 111:src/stm32l0xx_it.c ****   * @brief This function handles Pendable request for system service.
 112:src/stm32l0xx_it.c ****   */
 113:src/stm32l0xx_it.c **** void PendSV_Handler(void)
 114:src/stm32l0xx_it.c **** {
  96              		.loc 1 114 1 view -0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 115:src/stm32l0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 116:src/stm32l0xx_it.c **** 
 117:src/stm32l0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 118:src/stm32l0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 119:src/stm32l0xx_it.c **** 
 120:src/stm32l0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 121:src/stm32l0xx_it.c **** }
 101              		.loc 1 121 1 view .LVU11
 102              		@ sp needed
 103 0000 7047     		bx	lr
 104              		.cfi_endproc
 105              	.LFE45:
 107              		.section	.text.SysTick_Handler,"ax",%progbits
 108              		.align	1
 109              		.global	SysTick_Handler
 110              		.syntax unified
 111              		.code	16
 112              		.thumb_func
 113              		.fpu softvfp
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccePpaHC.s 			page 5


 115              	SysTick_Handler:
 116              	.LFB46:
 122:src/stm32l0xx_it.c **** 
 123:src/stm32l0xx_it.c **** /**
 124:src/stm32l0xx_it.c ****   * @brief This function handles System tick timer.
 125:src/stm32l0xx_it.c ****   */
 126:src/stm32l0xx_it.c **** void SysTick_Handler(void)
 127:src/stm32l0xx_it.c **** {
 117              		.loc 1 127 1 view -0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121 0000 10B5     		push	{r4, lr}
 122              	.LCFI0:
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 4, -8
 125              		.cfi_offset 14, -4
 128:src/stm32l0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 129:src/stm32l0xx_it.c **** 
 130:src/stm32l0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 131:src/stm32l0xx_it.c ****   HAL_IncTick();
 126              		.loc 1 131 3 view .LVU13
 127 0002 FFF7FEFF 		bl	HAL_IncTick
 128              	.LVL0:
 132:src/stm32l0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 133:src/stm32l0xx_it.c **** 
 134:src/stm32l0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 135:src/stm32l0xx_it.c **** }
 129              		.loc 1 135 1 is_stmt 0 view .LVU14
 130              		@ sp needed
 131 0006 10BD     		pop	{r4, pc}
 132              		.cfi_endproc
 133              	.LFE46:
 135              		.section	.text.LPUART1_IRQHandler,"ax",%progbits
 136              		.align	1
 137              		.global	LPUART1_IRQHandler
 138              		.syntax unified
 139              		.code	16
 140              		.thumb_func
 141              		.fpu softvfp
 143              	LPUART1_IRQHandler:
 144              	.LFB47:
 136:src/stm32l0xx_it.c **** 
 137:src/stm32l0xx_it.c **** /******************************************************************************/
 138:src/stm32l0xx_it.c **** /* STM32L0xx Peripheral Interrupt Handlers                                    */
 139:src/stm32l0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 140:src/stm32l0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 141:src/stm32l0xx_it.c **** /* please refer to the startup file (startup_stm32l0xx.s).                    */
 142:src/stm32l0xx_it.c **** /******************************************************************************/
 143:src/stm32l0xx_it.c **** 
 144:src/stm32l0xx_it.c **** /**
 145:src/stm32l0xx_it.c ****   * @brief This function handles LPUART1 global interrupt / LPUART1 wake-up interrupt through EXTI 
 146:src/stm32l0xx_it.c ****   */
 147:src/stm32l0xx_it.c ****  extern viccom_t state;
 148:src/stm32l0xx_it.c **** void LPUART1_IRQHandler(void)
 149:src/stm32l0xx_it.c **** {
 145              		.loc 1 149 1 is_stmt 1 view -0
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccePpaHC.s 			page 6


 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149 0000 10B5     		push	{r4, lr}
 150              	.LCFI1:
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 4, -8
 153              		.cfi_offset 14, -4
 150:src/stm32l0xx_it.c ****   VICCOM_uartHandler(&state);
 154              		.loc 1 150 3 view .LVU16
 155 0002 0248     		ldr	r0, .L9
 156 0004 FFF7FEFF 		bl	VICCOM_uartHandler
 157              	.LVL1:
 151:src/stm32l0xx_it.c ****   return;
 158              		.loc 1 151 3 view .LVU17
 152:src/stm32l0xx_it.c ****   /* USER CODE BEGIN LPUART1_IRQn 1 */
 153:src/stm32l0xx_it.c **** 
 154:src/stm32l0xx_it.c ****   /* USER CODE END LPUART1_IRQn 1 */
 155:src/stm32l0xx_it.c **** }
 159              		.loc 1 155 1 is_stmt 0 view .LVU18
 160              		@ sp needed
 161 0008 10BD     		pop	{r4, pc}
 162              	.L10:
 163 000a C046     		.align	2
 164              	.L9:
 165 000c 00000000 		.word	state
 166              		.cfi_endproc
 167              	.LFE47:
 169              		.text
 170              	.Letext0:
 171              		.file 2 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-m
 172              		.file 3 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-m
 173              		.file 4 "src/../mcu-bsp/lib/inc/viccom.h"
 174              		.file 5 "mcu-bsp/peripherals/stm32l0xx/inc/stm32l0xx_hal.h"
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccePpaHC.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l0xx_it.c
C:\Users\vic_user\AppData\Local\Temp\ccePpaHC.s:16     .text.NMI_Handler:00000000 $t
C:\Users\vic_user\AppData\Local\Temp\ccePpaHC.s:24     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\vic_user\AppData\Local\Temp\ccePpaHC.s:42     .text.HardFault_Handler:00000000 $t
C:\Users\vic_user\AppData\Local\Temp\ccePpaHC.s:49     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\vic_user\AppData\Local\Temp\ccePpaHC.s:66     .text.SVC_Handler:00000000 $t
C:\Users\vic_user\AppData\Local\Temp\ccePpaHC.s:73     .text.SVC_Handler:00000000 SVC_Handler
C:\Users\vic_user\AppData\Local\Temp\ccePpaHC.s:87     .text.PendSV_Handler:00000000 $t
C:\Users\vic_user\AppData\Local\Temp\ccePpaHC.s:94     .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\vic_user\AppData\Local\Temp\ccePpaHC.s:108    .text.SysTick_Handler:00000000 $t
C:\Users\vic_user\AppData\Local\Temp\ccePpaHC.s:115    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\vic_user\AppData\Local\Temp\ccePpaHC.s:136    .text.LPUART1_IRQHandler:00000000 $t
C:\Users\vic_user\AppData\Local\Temp\ccePpaHC.s:143    .text.LPUART1_IRQHandler:00000000 LPUART1_IRQHandler
C:\Users\vic_user\AppData\Local\Temp\ccePpaHC.s:165    .text.LPUART1_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
VICCOM_uartHandler
state
