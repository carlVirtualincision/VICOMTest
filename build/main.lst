ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB48:
  25              		.file 1 "src/main.c"
   1:src/main.c    **** /* USER CODE BEGIN Header */
   2:src/main.c    **** /**
   3:src/main.c    ****   ******************************************************************************
   4:src/main.c    ****   * @file           : main.c
   5:src/main.c    ****   * @brief          : Main program body
   6:src/main.c    ****   ******************************************************************************
   7:src/main.c    ****   * @attention
   8:src/main.c    ****   *
   9:src/main.c    ****   * Copyright (c) 2023 STMicroelectronics.
  10:src/main.c    ****   * All rights reserved.
  11:src/main.c    ****   *
  12:src/main.c    ****   * This software is licensed under terms that can be found in the LICENSE file
  13:src/main.c    ****   * in the root directory of this software component.
  14:src/main.c    ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:src/main.c    ****   *
  16:src/main.c    ****   ******************************************************************************
  17:src/main.c    ****   */
  18:src/main.c    **** /* USER CODE END Header */
  19:src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:src/main.c    **** #include "main.h"
  21:src/main.c    **** #include "../mcu-bsp/lib/inc/viccom.h"
  22:src/main.c    **** #include "stm32l011xx.h"
  23:src/main.c    **** #include "stm32l0xx_hal_dma.h"
  24:src/main.c    **** 
  25:src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:src/main.c    **** /* USER CODE BEGIN Includes */
  27:src/main.c    **** 
  28:src/main.c    **** /* USER CODE END Includes */
  29:src/main.c    **** 
  30:src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  31:src/main.c    **** /* USER CODE BEGIN PTD */
  32:src/main.c    **** 
  33:src/main.c    **** /* USER CODE END PTD */
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 2


  34:src/main.c    **** 
  35:src/main.c    **** /* Private define ------------------------------------------------------------*/
  36:src/main.c    **** /* USER CODE BEGIN PD */
  37:src/main.c    **** /* USER CODE END PD */
  38:src/main.c    **** 
  39:src/main.c    **** /* Private macro -------------------------------------------------------------*/
  40:src/main.c    **** /* USER CODE BEGIN PM */
  41:src/main.c    **** 
  42:src/main.c    **** /* USER CODE END PM */
  43:src/main.c    **** 
  44:src/main.c    **** /* Private variables ---------------------------------------------------------*/
  45:src/main.c    **** CRC_HandleTypeDef hcrc;
  46:src/main.c    **** 
  47:src/main.c    **** UART_HandleTypeDef hlpuart1;
  48:src/main.c    **** DMA_HandleTypeDef hdma_lpuart1_rx;
  49:src/main.c    **** DMA_HandleTypeDef hdma_lpuart1_tx;
  50:src/main.c    **** 
  51:src/main.c    **** SPI_HandleTypeDef hspi1;
  52:src/main.c    **** 
  53:src/main.c    **** /* USER CODE BEGIN PV */
  54:src/main.c    **** 
  55:src/main.c    **** /* USER CODE END PV */
  56:src/main.c    **** 
  57:src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  58:src/main.c    **** void SystemClock_Config(void);
  59:src/main.c    **** static void MX_GPIO_Init(void);
  60:src/main.c    **** static void MX_DMA_Init(void);
  61:src/main.c    **** static void MX_CRC_Init(void);
  62:src/main.c    **** static void MX_LPUART1_UART_Init(void);
  63:src/main.c    **** static void MX_SPI1_Init(void);
  64:src/main.c    **** /* USER CODE BEGIN PFP */
  65:src/main.c    **** 
  66:src/main.c    **** /* USER CODE END PFP */
  67:src/main.c    **** 
  68:src/main.c    **** /* Private user code ---------------------------------------------------------*/
  69:src/main.c    **** /* USER CODE BEGIN 0 */
  70:src/main.c    **** 
  71:src/main.c    **** viccom_t state;
  72:src/main.c    **** 
  73:src/main.c    **** /* USER CODE END 0 */
  74:src/main.c    **** /**
  75:src/main.c    ****   * @brief  The application entry point.
  76:src/main.c    ****   * @retval int
  77:src/main.c    ****   */
  78:src/main.c    **** int main(void)
  79:src/main.c    **** {
  80:src/main.c    ****   /* USER CODE BEGIN 1 */
  81:src/main.c    **** 
  82:src/main.c    ****   /* USER CODE END 1 */
  83:src/main.c    **** 
  84:src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  85:src/main.c    **** 
  86:src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:src/main.c    ****   HAL_Init();
  88:src/main.c    **** 
  89:src/main.c    ****   /* USER CODE BEGIN Init */
  90:src/main.c    **** 
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 3


  91:src/main.c    ****   /* USER CODE END Init */
  92:src/main.c    **** 
  93:src/main.c    ****   /* Configure the system clock */
  94:src/main.c    ****   SystemClock_Config();
  95:src/main.c    **** 
  96:src/main.c    ****   /* USER CODE BEGIN SysInit */
  97:src/main.c    **** 
  98:src/main.c    ****   /* USER CODE END SysInit */
  99:src/main.c    **** 
 100:src/main.c    ****   /* Initialize all configured peripherals */
 101:src/main.c    ****   MX_GPIO_Init();
 102:src/main.c    ****   MX_DMA_Init();
 103:src/main.c    ****   MX_CRC_Init();
 104:src/main.c    ****   MX_LPUART1_UART_Init();
 105:src/main.c    ****   MX_SPI1_Init();
 106:src/main.c    ****   /* USER CODE BEGIN 2 */
 107:src/main.c    ****   VICCOM_stm_init(&state, 2);
 108:src/main.c    ****   NVIC_EnableIRQ(LPUART1_IRQn);
 109:src/main.c    ****   LPUART1->CR1 |= USART_CR1_RXNEIE;
 110:src/main.c    ****   uint8_t fakeBuffer[1];
 111:src/main.c    ****   VICCOM_send(&state, fakeBuffer, 2);
 112:src/main.c    **** 
 113:src/main.c    ****   /* USER CODE END 2 */
 114:src/main.c    **** 
 115:src/main.c    ****   /* Infinite loop */
 116:src/main.c    ****   /* USER CODE BEGIN WHILE */
 117:src/main.c    ****   while (1)
 118:src/main.c    ****   {
 119:src/main.c    ****     /* USER CODE END WHILE */
 120:src/main.c    **** 
 121:src/main.c    **** 
 122:src/main.c    ****     /* USER CODE BEGIN 3 */
 123:src/main.c    ****   }
 124:src/main.c    ****   /* USER CODE END 3 */
 125:src/main.c    **** }
 126:src/main.c    **** 
 127:src/main.c    **** /**
 128:src/main.c    ****   * @brief System Clock Configuration
 129:src/main.c    ****   * @retval None
 130:src/main.c    ****   */
 131:src/main.c    **** void SystemClock_Config(void)
 132:src/main.c    **** {
 133:src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 134:src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 135:src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 136:src/main.c    **** 
 137:src/main.c    ****   /** Configure the main internal regulator output voltage
 138:src/main.c    ****   */
 139:src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 140:src/main.c    **** 
 141:src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 142:src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 143:src/main.c    ****   */
 144:src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 145:src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 146:src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 147:src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 4


 148:src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 149:src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 150:src/main.c    ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 151:src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 152:src/main.c    ****   {
 153:src/main.c    ****     Error_Handler();
 154:src/main.c    ****   }
 155:src/main.c    **** 
 156:src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 157:src/main.c    ****   */
 158:src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 159:src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 160:src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 161:src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 162:src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 163:src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 164:src/main.c    **** 
 165:src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 166:src/main.c    ****   {
 167:src/main.c    ****     Error_Handler();
 168:src/main.c    ****   }
 169:src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_LPUART1;
 170:src/main.c    ****   PeriphClkInit.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_PCLK1;
 171:src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 172:src/main.c    ****   {
 173:src/main.c    ****     Error_Handler();
 174:src/main.c    ****   }
 175:src/main.c    **** }
 176:src/main.c    **** 
 177:src/main.c    **** /**
 178:src/main.c    ****   * @brief CRC Initialization Function
 179:src/main.c    ****   * @param None
 180:src/main.c    ****   * @retval None
 181:src/main.c    ****   */
 182:src/main.c    **** static void MX_CRC_Init(void)
 183:src/main.c    **** {
 184:src/main.c    **** 
 185:src/main.c    ****   /* USER CODE BEGIN CRC_Init 0 */
 186:src/main.c    **** 
 187:src/main.c    ****   /* USER CODE END CRC_Init 0 */
 188:src/main.c    **** 
 189:src/main.c    ****   /* USER CODE BEGIN CRC_Init 1 */
 190:src/main.c    **** 
 191:src/main.c    ****   /* USER CODE END CRC_Init 1 */
 192:src/main.c    ****   hcrc.Instance = CRC;
 193:src/main.c    ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 194:src/main.c    ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 195:src/main.c    ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 196:src/main.c    ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 197:src/main.c    ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 198:src/main.c    ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 199:src/main.c    ****   {
 200:src/main.c    ****     Error_Handler();
 201:src/main.c    ****   }
 202:src/main.c    ****   /* USER CODE BEGIN CRC_Init 2 */
 203:src/main.c    **** 
 204:src/main.c    ****   /* USER CODE END CRC_Init 2 */
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 5


 205:src/main.c    **** 
 206:src/main.c    **** }
 207:src/main.c    **** 
 208:src/main.c    **** /**
 209:src/main.c    ****   * @brief LPUART1 Initialization Function
 210:src/main.c    ****   * @param None
 211:src/main.c    ****   * @retval None
 212:src/main.c    ****   */
 213:src/main.c    **** static void MX_LPUART1_UART_Init(void)
 214:src/main.c    **** {
 215:src/main.c    **** 
 216:src/main.c    ****   /* USER CODE BEGIN LPUART1_Init 0 */
 217:src/main.c    **** 
 218:src/main.c    ****   /* USER CODE END LPUART1_Init 0 */
 219:src/main.c    **** 
 220:src/main.c    ****   /* USER CODE BEGIN LPUART1_Init 1 */
 221:src/main.c    ****   /* USER CODE END LPUART1_Init 1 */
 222:src/main.c    ****   hlpuart1.Instance = LPUART1;
 223:src/main.c    ****   hlpuart1.Init.BaudRate = 3000000;
 224:src/main.c    ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_9B;
 225:src/main.c    ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 226:src/main.c    ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 227:src/main.c    ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 228:src/main.c    ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 229:src/main.c    ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 230:src/main.c    ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 231:src/main.c    ****   //enable transmission complete interrupt
 232:src/main.c    ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 233:src/main.c    ****   {
 234:src/main.c    ****     Error_Handler();
 235:src/main.c    ****   }
 236:src/main.c    ****   /* USER CODE BEGIN LPUART1_Init 2 */
 237:src/main.c    **** 
 238:src/main.c    ****   /* USER CODE END LPUART1_Init 2 */
 239:src/main.c    **** 
 240:src/main.c    **** }
 241:src/main.c    **** 
 242:src/main.c    **** /**
 243:src/main.c    ****   * @brief SPI1 Initialization Function
 244:src/main.c    ****   * @param None
 245:src/main.c    ****   * @retval None
 246:src/main.c    ****   */
 247:src/main.c    **** static void MX_SPI1_Init(void)
 248:src/main.c    **** {
 249:src/main.c    **** 
 250:src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 251:src/main.c    **** 
 252:src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 253:src/main.c    **** 
 254:src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 255:src/main.c    **** 
 256:src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 257:src/main.c    ****   /* SPI1 parameter configuration*/
 258:src/main.c    ****   hspi1.Instance = SPI1;
 259:src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 260:src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 261:src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 6


 262:src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 263:src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 264:src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 265:src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 266:src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 267:src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 268:src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 269:src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 270:src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 271:src/main.c    ****   {
 272:src/main.c    ****     Error_Handler();
 273:src/main.c    ****   }
 274:src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 275:src/main.c    **** 
 276:src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 277:src/main.c    **** 
 278:src/main.c    **** }
 279:src/main.c    **** 
 280:src/main.c    **** /**
 281:src/main.c    ****   * Enable DMA controller clock
 282:src/main.c    ****   */
 283:src/main.c    **** static void MX_DMA_Init(void)
 284:src/main.c    **** {
 285:src/main.c    **** 
 286:src/main.c    ****   /* DMA controller clock enable */
 287:src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
 288:src/main.c    **** 
 289:src/main.c    ****   /* DMA interrupt init */
 290:src/main.c    ****   /* DMA1_Channel2_3_IRQn interrupt configuration */
 291:src/main.c    ****   HAL_NVIC_SetPriority(DMA1_Channel2_3_IRQn, 0, 0);
 292:src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_3_IRQn);
 293:src/main.c    ****   /* Peripheral DMA init*/
 294:src/main.c    ****   // DMA1_CSELR->CSELR |=  0x500;
 295:src/main.c    ****   // DMA1_CSELR->CSELR &= ~(0xA00);
 296:src/main.c    ****   // hdma_lpuart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 297:src/main.c    ****   // hdma_lpuart1_rx.Init.Mode = DMA_NORMAL;
 298:src/main.c    ****   // hdma_lpuart1_rx.Init.Priority = DMA_PRIORITY_LOW;
 299:src/main.c    ****   // HAL_DMA_Init(&hdma_lpuart1_rx);
 300:src/main.c    **** 
 301:src/main.c    **** }
 302:src/main.c    **** 
 303:src/main.c    **** /**
 304:src/main.c    ****   * @brief GPIO Initialization Function
 305:src/main.c    ****   * @param None
 306:src/main.c    ****   * @retval None
 307:src/main.c    ****   */
 308:src/main.c    **** static void MX_GPIO_Init(void)
 309:src/main.c    **** {
  26              		.loc 1 309 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 20
  33              		.cfi_offset 4, -20
  34              		.cfi_offset 5, -16
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 7


  35              		.cfi_offset 6, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 C646     		mov	lr, r8
  39 0004 00B5     		push	{lr}
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 24
  42              		.cfi_offset 8, -24
  43 0006 88B0     		sub	sp, sp, #32
  44              	.LCFI2:
  45              		.cfi_def_cfa_offset 56
 310:src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  46              		.loc 1 310 3 view .LVU1
  47              		.loc 1 310 20 is_stmt 0 view .LVU2
  48 0008 1422     		movs	r2, #20
  49 000a 0021     		movs	r1, #0
  50 000c 03A8     		add	r0, sp, #12
  51 000e FFF7FEFF 		bl	memset
  52              	.LVL0:
 311:src/main.c    **** 
 312:src/main.c    ****   /* GPIO Ports Clock Enable */
 313:src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  53              		.loc 1 313 3 is_stmt 1 view .LVU3
  54              	.LBB6:
  55              		.loc 1 313 3 view .LVU4
  56              		.loc 1 313 3 view .LVU5
  57 0012 204B     		ldr	r3, .L2
  58 0014 D96A     		ldr	r1, [r3, #44]
  59 0016 0422     		movs	r2, #4
  60 0018 1143     		orrs	r1, r2
  61 001a D962     		str	r1, [r3, #44]
  62              		.loc 1 313 3 view .LVU6
  63 001c D96A     		ldr	r1, [r3, #44]
  64 001e 0A40     		ands	r2, r1
  65 0020 0092     		str	r2, [sp]
  66              		.loc 1 313 3 view .LVU7
  67 0022 009A     		ldr	r2, [sp]
  68              	.LBE6:
  69              		.loc 1 313 3 view .LVU8
 314:src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  70              		.loc 1 314 3 view .LVU9
  71              	.LBB7:
  72              		.loc 1 314 3 view .LVU10
  73              		.loc 1 314 3 view .LVU11
  74 0024 DA6A     		ldr	r2, [r3, #44]
  75 0026 0125     		movs	r5, #1
  76 0028 2A43     		orrs	r2, r5
  77 002a DA62     		str	r2, [r3, #44]
  78              		.loc 1 314 3 view .LVU12
  79 002c DA6A     		ldr	r2, [r3, #44]
  80 002e 2A40     		ands	r2, r5
  81 0030 0192     		str	r2, [sp, #4]
  82              		.loc 1 314 3 view .LVU13
  83 0032 019A     		ldr	r2, [sp, #4]
  84              	.LBE7:
  85              		.loc 1 314 3 view .LVU14
 315:src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 8


  86              		.loc 1 315 3 view .LVU15
  87              	.LBB8:
  88              		.loc 1 315 3 view .LVU16
  89              		.loc 1 315 3 view .LVU17
  90 0034 D96A     		ldr	r1, [r3, #44]
  91 0036 0222     		movs	r2, #2
  92 0038 1143     		orrs	r1, r2
  93 003a D962     		str	r1, [r3, #44]
  94              		.loc 1 315 3 view .LVU18
  95 003c DB6A     		ldr	r3, [r3, #44]
  96 003e 1A40     		ands	r2, r3
  97 0040 0292     		str	r2, [sp, #8]
  98              		.loc 1 315 3 view .LVU19
  99 0042 029B     		ldr	r3, [sp, #8]
 100              	.LBE8:
 101              		.loc 1 315 3 view .LVU20
 316:src/main.c    **** 
 317:src/main.c    ****   /*Configure GPIO pin Output Level */
 318:src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14, GPIO_PIN_RESET);
 102              		.loc 1 318 3 view .LVU21
 103 0044 8024     		movs	r4, #128
 104 0046 E401     		lsls	r4, r4, #7
 105 0048 134B     		ldr	r3, .L2+4
 106 004a 9846     		mov	r8, r3
 107 004c 0022     		movs	r2, #0
 108 004e 2100     		movs	r1, r4
 109 0050 1800     		movs	r0, r3
 110 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 111              	.LVL1:
 319:src/main.c    **** 
 320:src/main.c    ****   /*Configure GPIO pin Output Level */
 321:src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);
 112              		.loc 1 321 3 view .LVU22
 113 0056 8027     		movs	r7, #128
 114 0058 7F00     		lsls	r7, r7, #1
 115 005a A026     		movs	r6, #160
 116 005c F605     		lsls	r6, r6, #23
 117 005e 0022     		movs	r2, #0
 118 0060 3900     		movs	r1, r7
 119 0062 3000     		movs	r0, r6
 120 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 121              	.LVL2:
 322:src/main.c    **** 
 323:src/main.c    ****   /*Configure GPIO pin : PC14 */
 324:src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_14;
 122              		.loc 1 324 3 view .LVU23
 123              		.loc 1 324 23 is_stmt 0 view .LVU24
 124 0068 0394     		str	r4, [sp, #12]
 325:src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 125              		.loc 1 325 3 is_stmt 1 view .LVU25
 126              		.loc 1 325 24 is_stmt 0 view .LVU26
 127 006a 0495     		str	r5, [sp, #16]
 326:src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 128              		.loc 1 326 3 is_stmt 1 view .LVU27
 129              		.loc 1 326 24 is_stmt 0 view .LVU28
 130 006c 0024     		movs	r4, #0
 131 006e 0594     		str	r4, [sp, #20]
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 9


 327:src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 132              		.loc 1 327 3 is_stmt 1 view .LVU29
 133              		.loc 1 327 25 is_stmt 0 view .LVU30
 134 0070 0694     		str	r4, [sp, #24]
 328:src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 135              		.loc 1 328 3 is_stmt 1 view .LVU31
 136 0072 03A9     		add	r1, sp, #12
 137 0074 4046     		mov	r0, r8
 138 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 139              	.LVL3:
 329:src/main.c    **** 
 330:src/main.c    ****   /*Configure GPIO pin : PA8 */
 331:src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 140              		.loc 1 331 3 view .LVU32
 141              		.loc 1 331 23 is_stmt 0 view .LVU33
 142 007a 0397     		str	r7, [sp, #12]
 332:src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 143              		.loc 1 332 3 is_stmt 1 view .LVU34
 144              		.loc 1 332 24 is_stmt 0 view .LVU35
 145 007c 0495     		str	r5, [sp, #16]
 333:src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 146              		.loc 1 333 3 is_stmt 1 view .LVU36
 147              		.loc 1 333 24 is_stmt 0 view .LVU37
 148 007e 0594     		str	r4, [sp, #20]
 334:src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 149              		.loc 1 334 3 is_stmt 1 view .LVU38
 150              		.loc 1 334 25 is_stmt 0 view .LVU39
 151 0080 0694     		str	r4, [sp, #24]
 335:src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 152              		.loc 1 335 3 is_stmt 1 view .LVU40
 153 0082 03A9     		add	r1, sp, #12
 154 0084 3000     		movs	r0, r6
 155 0086 FFF7FEFF 		bl	HAL_GPIO_Init
 156              	.LVL4:
 336:src/main.c    **** 
 337:src/main.c    **** }
 157              		.loc 1 337 1 is_stmt 0 view .LVU41
 158 008a 08B0     		add	sp, sp, #32
 159              		@ sp needed
 160 008c 80BC     		pop	{r7}
 161 008e B846     		mov	r8, r7
 162 0090 F0BD     		pop	{r4, r5, r6, r7, pc}
 163              	.L3:
 164 0092 C046     		.align	2
 165              	.L2:
 166 0094 00100240 		.word	1073876992
 167 0098 00080050 		.word	1342179328
 168              		.cfi_endproc
 169              	.LFE48:
 171              		.section	.text.MX_DMA_Init,"ax",%progbits
 172              		.align	1
 173              		.syntax unified
 174              		.code	16
 175              		.thumb_func
 176              		.fpu softvfp
 178              	MX_DMA_Init:
 179              	.LFB47:
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 10


 284:src/main.c    **** 
 180              		.loc 1 284 1 is_stmt 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 8
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184 0000 00B5     		push	{lr}
 185              	.LCFI3:
 186              		.cfi_def_cfa_offset 4
 187              		.cfi_offset 14, -4
 188 0002 83B0     		sub	sp, sp, #12
 189              	.LCFI4:
 190              		.cfi_def_cfa_offset 16
 287:src/main.c    **** 
 191              		.loc 1 287 3 view .LVU43
 192              	.LBB9:
 287:src/main.c    **** 
 193              		.loc 1 287 3 view .LVU44
 287:src/main.c    **** 
 194              		.loc 1 287 3 view .LVU45
 195 0004 094A     		ldr	r2, .L5
 196 0006 116B     		ldr	r1, [r2, #48]
 197 0008 0123     		movs	r3, #1
 198 000a 1943     		orrs	r1, r3
 199 000c 1163     		str	r1, [r2, #48]
 287:src/main.c    **** 
 200              		.loc 1 287 3 view .LVU46
 201 000e 126B     		ldr	r2, [r2, #48]
 202 0010 1340     		ands	r3, r2
 203 0012 0193     		str	r3, [sp, #4]
 287:src/main.c    **** 
 204              		.loc 1 287 3 view .LVU47
 205 0014 019B     		ldr	r3, [sp, #4]
 206              	.LBE9:
 287:src/main.c    **** 
 207              		.loc 1 287 3 view .LVU48
 291:src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_3_IRQn);
 208              		.loc 1 291 3 view .LVU49
 209 0016 0022     		movs	r2, #0
 210 0018 0021     		movs	r1, #0
 211 001a 0A20     		movs	r0, #10
 212 001c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 213              	.LVL5:
 292:src/main.c    ****   /* Peripheral DMA init*/
 214              		.loc 1 292 3 view .LVU50
 215 0020 0A20     		movs	r0, #10
 216 0022 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 217              	.LVL6:
 301:src/main.c    **** 
 218              		.loc 1 301 1 is_stmt 0 view .LVU51
 219 0026 03B0     		add	sp, sp, #12
 220              		@ sp needed
 221 0028 00BD     		pop	{pc}
 222              	.L6:
 223 002a C046     		.align	2
 224              	.L5:
 225 002c 00100240 		.word	1073876992
 226              		.cfi_endproc
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 11


 227              	.LFE47:
 229              		.section	.text.Error_Handler,"ax",%progbits
 230              		.align	1
 231              		.global	Error_Handler
 232              		.syntax unified
 233              		.code	16
 234              		.thumb_func
 235              		.fpu softvfp
 237              	Error_Handler:
 238              	.LFB49:
 338:src/main.c    **** 
 339:src/main.c    **** /* USER CODE BEGIN 4 */
 340:src/main.c    **** 
 341:src/main.c    **** /* USER CODE END 4 */
 342:src/main.c    **** 
 343:src/main.c    **** /**
 344:src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 345:src/main.c    ****   * @retval None
 346:src/main.c    ****   */
 347:src/main.c    **** void Error_Handler(void)
 348:src/main.c    **** {
 239              		.loc 1 348 1 is_stmt 1 view -0
 240              		.cfi_startproc
 241              		@ Volatile: function does not return.
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              		@ link register save eliminated.
 349:src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 350:src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 351:src/main.c    ****   __disable_irq();
 245              		.loc 1 351 3 view .LVU53
 246              	.LBB10:
 247              	.LBI10:
 248              		.file 2 "mcu-bsp/CMSIS/Include/cmsis_gcc.h"
   1:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** /*
   8:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  *
  10:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  *
  12:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  *
  16:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  *
  18:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 12


  24:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** 
  25:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** 
  28:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** 
  34:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
  38:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** 
  39:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
  43:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
  46:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
  49:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
  55:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
  58:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
  61:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
  64:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
  67:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
  70:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
  78:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 13


  81:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
  86:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
  94:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
 102:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
 110:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
 113:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
 116:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
 119:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** 
 120:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** 
 122:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** 
 124:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** /**
 125:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   
 130:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  */
 131:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** {
 133:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   
 135:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 14


 138:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   
 141:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   
 146:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** 
 151:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****     }
 155:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   }
 156:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  
 157:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****     }
 161:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   }
 162:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  
 163:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** }
 165:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   
 166:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
 168:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** 
 169:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
 172:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** 
 173:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
 176:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** 
 177:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
 180:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** 
 181:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** #endif
 184:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** 
 185:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   @{
 189:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  */
 190:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** 
 191:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** /**
 192:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 15


 195:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  */
 196:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** {
 198:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** }
 200:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** 
 201:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** 
 202:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** /**
 203:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****  */
 207:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 249              		.loc 2 207 27 view .LVU54
 250              	.LBB11:
 208:mcu-bsp/CMSIS/Include/cmsis_gcc.h **** {
 209:mcu-bsp/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 251              		.loc 2 209 3 view .LVU55
 252              		.syntax divided
 253              	@ 209 "mcu-bsp/CMSIS/Include/cmsis_gcc.h" 1
 254 0000 72B6     		cpsid i
 255              	@ 0 "" 2
 256              		.thumb
 257              		.syntax unified
 258              	.L8:
 259              	.LBE11:
 260              	.LBE10:
 352:src/main.c    ****   while (1)
 261              		.loc 1 352 3 discriminator 1 view .LVU56
 353:src/main.c    ****   {
 354:src/main.c    **** 
 355:src/main.c    ****   }
 262              		.loc 1 355 3 discriminator 1 view .LVU57
 352:src/main.c    ****   while (1)
 263              		.loc 1 352 9 discriminator 1 view .LVU58
 264 0002 FEE7     		b	.L8
 265              		.cfi_endproc
 266              	.LFE49:
 268              		.section	.text.MX_CRC_Init,"ax",%progbits
 269              		.align	1
 270              		.syntax unified
 271              		.code	16
 272              		.thumb_func
 273              		.fpu softvfp
 275              	MX_CRC_Init:
 276              	.LFB44:
 183:src/main.c    **** 
 277              		.loc 1 183 1 view -0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281 0000 10B5     		push	{r4, lr}
 282              	.LCFI5:
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 4, -8
 285              		.cfi_offset 14, -4
 192:src/main.c    ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 16


 286              		.loc 1 192 3 view .LVU60
 192:src/main.c    ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 287              		.loc 1 192 17 is_stmt 0 view .LVU61
 288 0002 0848     		ldr	r0, .L12
 289 0004 084B     		ldr	r3, .L12+4
 290 0006 0360     		str	r3, [r0]
 193:src/main.c    ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 291              		.loc 1 193 3 is_stmt 1 view .LVU62
 193:src/main.c    ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 292              		.loc 1 193 34 is_stmt 0 view .LVU63
 293 0008 0023     		movs	r3, #0
 294 000a 0371     		strb	r3, [r0, #4]
 194:src/main.c    ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 295              		.loc 1 194 3 is_stmt 1 view .LVU64
 194:src/main.c    ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 296              		.loc 1 194 33 is_stmt 0 view .LVU65
 297 000c 4371     		strb	r3, [r0, #5]
 195:src/main.c    ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 298              		.loc 1 195 3 is_stmt 1 view .LVU66
 195:src/main.c    ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 299              		.loc 1 195 36 is_stmt 0 view .LVU67
 300 000e 4361     		str	r3, [r0, #20]
 196:src/main.c    ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 301              		.loc 1 196 3 is_stmt 1 view .LVU68
 196:src/main.c    ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 302              		.loc 1 196 37 is_stmt 0 view .LVU69
 303 0010 8361     		str	r3, [r0, #24]
 197:src/main.c    ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 304              		.loc 1 197 3 is_stmt 1 view .LVU70
 197:src/main.c    ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 305              		.loc 1 197 24 is_stmt 0 view .LVU71
 306 0012 0133     		adds	r3, r3, #1
 307 0014 0362     		str	r3, [r0, #32]
 198:src/main.c    ****   {
 308              		.loc 1 198 3 is_stmt 1 view .LVU72
 198:src/main.c    ****   {
 309              		.loc 1 198 7 is_stmt 0 view .LVU73
 310 0016 FFF7FEFF 		bl	HAL_CRC_Init
 311              	.LVL7:
 198:src/main.c    ****   {
 312              		.loc 1 198 6 view .LVU74
 313 001a 0028     		cmp	r0, #0
 314 001c 00D1     		bne	.L11
 206:src/main.c    **** 
 315              		.loc 1 206 1 view .LVU75
 316              		@ sp needed
 317 001e 10BD     		pop	{r4, pc}
 318              	.L11:
 200:src/main.c    ****   }
 319              		.loc 1 200 5 is_stmt 1 view .LVU76
 320 0020 FFF7FEFF 		bl	Error_Handler
 321              	.LVL8:
 322              	.L13:
 323              		.align	2
 324              	.L12:
 325 0024 00000000 		.word	.LANCHOR0
 326 0028 00300240 		.word	1073885184
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 17


 327              		.cfi_endproc
 328              	.LFE44:
 330              		.section	.text.MX_LPUART1_UART_Init,"ax",%progbits
 331              		.align	1
 332              		.syntax unified
 333              		.code	16
 334              		.thumb_func
 335              		.fpu softvfp
 337              	MX_LPUART1_UART_Init:
 338              	.LFB45:
 214:src/main.c    **** 
 339              		.loc 1 214 1 view -0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343 0000 10B5     		push	{r4, lr}
 344              	.LCFI6:
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 4, -8
 347              		.cfi_offset 14, -4
 222:src/main.c    ****   hlpuart1.Init.BaudRate = 3000000;
 348              		.loc 1 222 3 view .LVU78
 222:src/main.c    ****   hlpuart1.Init.BaudRate = 3000000;
 349              		.loc 1 222 21 is_stmt 0 view .LVU79
 350 0002 0B48     		ldr	r0, .L17
 351 0004 0B4B     		ldr	r3, .L17+4
 352 0006 0360     		str	r3, [r0]
 223:src/main.c    ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_9B;
 353              		.loc 1 223 3 is_stmt 1 view .LVU80
 223:src/main.c    ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_9B;
 354              		.loc 1 223 26 is_stmt 0 view .LVU81
 355 0008 0B4B     		ldr	r3, .L17+8
 356 000a 4360     		str	r3, [r0, #4]
 224:src/main.c    ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 357              		.loc 1 224 3 is_stmt 1 view .LVU82
 224:src/main.c    ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 358              		.loc 1 224 28 is_stmt 0 view .LVU83
 359 000c 8023     		movs	r3, #128
 360 000e 5B01     		lsls	r3, r3, #5
 361 0010 8360     		str	r3, [r0, #8]
 225:src/main.c    ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 362              		.loc 1 225 3 is_stmt 1 view .LVU84
 225:src/main.c    ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 363              		.loc 1 225 26 is_stmt 0 view .LVU85
 364 0012 0023     		movs	r3, #0
 365 0014 C360     		str	r3, [r0, #12]
 226:src/main.c    ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 366              		.loc 1 226 3 is_stmt 1 view .LVU86
 226:src/main.c    ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 367              		.loc 1 226 24 is_stmt 0 view .LVU87
 368 0016 0361     		str	r3, [r0, #16]
 227:src/main.c    ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 369              		.loc 1 227 3 is_stmt 1 view .LVU88
 227:src/main.c    ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 370              		.loc 1 227 22 is_stmt 0 view .LVU89
 371 0018 0C22     		movs	r2, #12
 372 001a 4261     		str	r2, [r0, #20]
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 18


 228:src/main.c    ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 373              		.loc 1 228 3 is_stmt 1 view .LVU90
 228:src/main.c    ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 374              		.loc 1 228 27 is_stmt 0 view .LVU91
 375 001c 8361     		str	r3, [r0, #24]
 229:src/main.c    ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 376              		.loc 1 229 3 is_stmt 1 view .LVU92
 229:src/main.c    ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 377              		.loc 1 229 32 is_stmt 0 view .LVU93
 378 001e 0362     		str	r3, [r0, #32]
 230:src/main.c    ****   //enable transmission complete interrupt
 379              		.loc 1 230 3 is_stmt 1 view .LVU94
 230:src/main.c    ****   //enable transmission complete interrupt
 380              		.loc 1 230 40 is_stmt 0 view .LVU95
 381 0020 4362     		str	r3, [r0, #36]
 232:src/main.c    ****   {
 382              		.loc 1 232 3 is_stmt 1 view .LVU96
 232:src/main.c    ****   {
 383              		.loc 1 232 7 is_stmt 0 view .LVU97
 384 0022 FFF7FEFF 		bl	HAL_UART_Init
 385              	.LVL9:
 232:src/main.c    ****   {
 386              		.loc 1 232 6 view .LVU98
 387 0026 0028     		cmp	r0, #0
 388 0028 00D1     		bne	.L16
 240:src/main.c    **** 
 389              		.loc 1 240 1 view .LVU99
 390              		@ sp needed
 391 002a 10BD     		pop	{r4, pc}
 392              	.L16:
 234:src/main.c    ****   }
 393              		.loc 1 234 5 is_stmt 1 view .LVU100
 394 002c FFF7FEFF 		bl	Error_Handler
 395              	.LVL10:
 396              	.L18:
 397              		.align	2
 398              	.L17:
 399 0030 00000000 		.word	hlpuart1
 400 0034 00480040 		.word	1073760256
 401 0038 C0C62D00 		.word	3000000
 402              		.cfi_endproc
 403              	.LFE45:
 405              		.section	.text.MX_SPI1_Init,"ax",%progbits
 406              		.align	1
 407              		.syntax unified
 408              		.code	16
 409              		.thumb_func
 410              		.fpu softvfp
 412              	MX_SPI1_Init:
 413              	.LFB46:
 248:src/main.c    **** 
 414              		.loc 1 248 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418 0000 10B5     		push	{r4, lr}
 419              	.LCFI7:
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 19


 420              		.cfi_def_cfa_offset 8
 421              		.cfi_offset 4, -8
 422              		.cfi_offset 14, -4
 258:src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 423              		.loc 1 258 3 view .LVU102
 258:src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 424              		.loc 1 258 18 is_stmt 0 view .LVU103
 425 0002 0D48     		ldr	r0, .L22
 426 0004 0D4B     		ldr	r3, .L22+4
 427 0006 0360     		str	r3, [r0]
 259:src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 428              		.loc 1 259 3 is_stmt 1 view .LVU104
 259:src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 429              		.loc 1 259 19 is_stmt 0 view .LVU105
 430 0008 8223     		movs	r3, #130
 431 000a 5B00     		lsls	r3, r3, #1
 432 000c 4360     		str	r3, [r0, #4]
 260:src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 433              		.loc 1 260 3 is_stmt 1 view .LVU106
 260:src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 434              		.loc 1 260 24 is_stmt 0 view .LVU107
 435 000e 0023     		movs	r3, #0
 436 0010 8360     		str	r3, [r0, #8]
 261:src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 437              		.loc 1 261 3 is_stmt 1 view .LVU108
 261:src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 438              		.loc 1 261 23 is_stmt 0 view .LVU109
 439 0012 C360     		str	r3, [r0, #12]
 262:src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 440              		.loc 1 262 3 is_stmt 1 view .LVU110
 262:src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 441              		.loc 1 262 26 is_stmt 0 view .LVU111
 442 0014 0361     		str	r3, [r0, #16]
 263:src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 443              		.loc 1 263 3 is_stmt 1 view .LVU112
 263:src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 444              		.loc 1 263 23 is_stmt 0 view .LVU113
 445 0016 4361     		str	r3, [r0, #20]
 264:src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 446              		.loc 1 264 3 is_stmt 1 view .LVU114
 264:src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 447              		.loc 1 264 18 is_stmt 0 view .LVU115
 448 0018 8022     		movs	r2, #128
 449 001a 9200     		lsls	r2, r2, #2
 450 001c 8261     		str	r2, [r0, #24]
 265:src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 451              		.loc 1 265 3 is_stmt 1 view .LVU116
 265:src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 452              		.loc 1 265 32 is_stmt 0 view .LVU117
 453 001e C361     		str	r3, [r0, #28]
 266:src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 454              		.loc 1 266 3 is_stmt 1 view .LVU118
 266:src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 455              		.loc 1 266 23 is_stmt 0 view .LVU119
 456 0020 0362     		str	r3, [r0, #32]
 267:src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 457              		.loc 1 267 3 is_stmt 1 view .LVU120
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 20


 267:src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 458              		.loc 1 267 21 is_stmt 0 view .LVU121
 459 0022 4362     		str	r3, [r0, #36]
 268:src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 460              		.loc 1 268 3 is_stmt 1 view .LVU122
 268:src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 461              		.loc 1 268 29 is_stmt 0 view .LVU123
 462 0024 8362     		str	r3, [r0, #40]
 269:src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 463              		.loc 1 269 3 is_stmt 1 view .LVU124
 269:src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 464              		.loc 1 269 28 is_stmt 0 view .LVU125
 465 0026 0733     		adds	r3, r3, #7
 466 0028 C362     		str	r3, [r0, #44]
 270:src/main.c    ****   {
 467              		.loc 1 270 3 is_stmt 1 view .LVU126
 270:src/main.c    ****   {
 468              		.loc 1 270 7 is_stmt 0 view .LVU127
 469 002a FFF7FEFF 		bl	HAL_SPI_Init
 470              	.LVL11:
 270:src/main.c    ****   {
 471              		.loc 1 270 6 view .LVU128
 472 002e 0028     		cmp	r0, #0
 473 0030 00D1     		bne	.L21
 278:src/main.c    **** 
 474              		.loc 1 278 1 view .LVU129
 475              		@ sp needed
 476 0032 10BD     		pop	{r4, pc}
 477              	.L21:
 272:src/main.c    ****   }
 478              		.loc 1 272 5 is_stmt 1 view .LVU130
 479 0034 FFF7FEFF 		bl	Error_Handler
 480              	.LVL12:
 481              	.L23:
 482              		.align	2
 483              	.L22:
 484 0038 00000000 		.word	.LANCHOR1
 485 003c 00300140 		.word	1073819648
 486              		.cfi_endproc
 487              	.LFE46:
 489              		.section	.text.SystemClock_Config,"ax",%progbits
 490              		.align	1
 491              		.global	SystemClock_Config
 492              		.syntax unified
 493              		.code	16
 494              		.thumb_func
 495              		.fpu softvfp
 497              	SystemClock_Config:
 498              	.LFB43:
 132:src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 499              		.loc 1 132 1 view -0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 96
 502              		@ frame_needed = 0, uses_anonymous_args = 0
 503 0000 00B5     		push	{lr}
 504              	.LCFI8:
 505              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 21


 506              		.cfi_offset 14, -4
 507 0002 99B0     		sub	sp, sp, #100
 508              	.LCFI9:
 509              		.cfi_def_cfa_offset 104
 133:src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 510              		.loc 1 133 3 view .LVU132
 133:src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 511              		.loc 1 133 22 is_stmt 0 view .LVU133
 512 0004 3422     		movs	r2, #52
 513 0006 0021     		movs	r1, #0
 514 0008 0BA8     		add	r0, sp, #44
 515 000a FFF7FEFF 		bl	memset
 516              	.LVL13:
 134:src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 517              		.loc 1 134 3 is_stmt 1 view .LVU134
 134:src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 518              		.loc 1 134 22 is_stmt 0 view .LVU135
 519 000e 1422     		movs	r2, #20
 520 0010 0021     		movs	r1, #0
 521 0012 06A8     		add	r0, sp, #24
 522 0014 FFF7FEFF 		bl	memset
 523              	.LVL14:
 135:src/main.c    **** 
 524              		.loc 1 135 3 is_stmt 1 view .LVU136
 135:src/main.c    **** 
 525              		.loc 1 135 28 is_stmt 0 view .LVU137
 526 0018 1822     		movs	r2, #24
 527 001a 0021     		movs	r1, #0
 528 001c 6846     		mov	r0, sp
 529 001e FFF7FEFF 		bl	memset
 530              	.LVL15:
 139:src/main.c    **** 
 531              		.loc 1 139 3 is_stmt 1 view .LVU138
 532 0022 1D49     		ldr	r1, .L31
 533 0024 0B68     		ldr	r3, [r1]
 534 0026 1D4A     		ldr	r2, .L31+4
 535 0028 1A40     		ands	r2, r3
 536 002a 8023     		movs	r3, #128
 537 002c 1B01     		lsls	r3, r3, #4
 538 002e 1343     		orrs	r3, r2
 539 0030 0B60     		str	r3, [r1]
 144:src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 540              		.loc 1 144 3 view .LVU139
 144:src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 541              		.loc 1 144 36 is_stmt 0 view .LVU140
 542 0032 0223     		movs	r3, #2
 543 0034 0B93     		str	r3, [sp, #44]
 145:src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 544              		.loc 1 145 3 is_stmt 1 view .LVU141
 145:src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 545              		.loc 1 145 30 is_stmt 0 view .LVU142
 546 0036 0122     		movs	r2, #1
 547 0038 0E92     		str	r2, [sp, #56]
 146:src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 548              		.loc 1 146 3 is_stmt 1 view .LVU143
 146:src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 549              		.loc 1 146 41 is_stmt 0 view .LVU144
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 22


 550 003a 0F32     		adds	r2, r2, #15
 551 003c 0F92     		str	r2, [sp, #60]
 147:src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 552              		.loc 1 147 3 is_stmt 1 view .LVU145
 147:src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 553              		.loc 1 147 34 is_stmt 0 view .LVU146
 554 003e 1493     		str	r3, [sp, #80]
 148:src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 555              		.loc 1 148 3 is_stmt 1 view .LVU147
 148:src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 556              		.loc 1 148 35 is_stmt 0 view .LVU148
 557 0040 0023     		movs	r3, #0
 558 0042 1593     		str	r3, [sp, #84]
 149:src/main.c    ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 559              		.loc 1 149 3 is_stmt 1 view .LVU149
 149:src/main.c    ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 560              		.loc 1 149 32 is_stmt 0 view .LVU150
 561 0044 8023     		movs	r3, #128
 562 0046 DB02     		lsls	r3, r3, #11
 563 0048 1693     		str	r3, [sp, #88]
 150:src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 564              		.loc 1 150 3 is_stmt 1 view .LVU151
 150:src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 565              		.loc 1 150 32 is_stmt 0 view .LVU152
 566 004a 8023     		movs	r3, #128
 567 004c DB03     		lsls	r3, r3, #15
 568 004e 1793     		str	r3, [sp, #92]
 151:src/main.c    ****   {
 569              		.loc 1 151 3 is_stmt 1 view .LVU153
 151:src/main.c    ****   {
 570              		.loc 1 151 7 is_stmt 0 view .LVU154
 571 0050 0BA8     		add	r0, sp, #44
 572 0052 FFF7FEFF 		bl	HAL_RCC_OscConfig
 573              	.LVL16:
 151:src/main.c    ****   {
 574              		.loc 1 151 6 view .LVU155
 575 0056 0028     		cmp	r0, #0
 576 0058 18D1     		bne	.L28
 158:src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 577              		.loc 1 158 3 is_stmt 1 view .LVU156
 158:src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 578              		.loc 1 158 31 is_stmt 0 view .LVU157
 579 005a 0F23     		movs	r3, #15
 580 005c 0693     		str	r3, [sp, #24]
 160:src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 581              		.loc 1 160 3 is_stmt 1 view .LVU158
 160:src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 582              		.loc 1 160 34 is_stmt 0 view .LVU159
 583 005e 0C3B     		subs	r3, r3, #12
 584 0060 0793     		str	r3, [sp, #28]
 161:src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 585              		.loc 1 161 3 is_stmt 1 view .LVU160
 161:src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 586              		.loc 1 161 35 is_stmt 0 view .LVU161
 587 0062 0023     		movs	r3, #0
 588 0064 0893     		str	r3, [sp, #32]
 162:src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 23


 589              		.loc 1 162 3 is_stmt 1 view .LVU162
 162:src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 590              		.loc 1 162 36 is_stmt 0 view .LVU163
 591 0066 0993     		str	r3, [sp, #36]
 163:src/main.c    **** 
 592              		.loc 1 163 3 is_stmt 1 view .LVU164
 163:src/main.c    **** 
 593              		.loc 1 163 36 is_stmt 0 view .LVU165
 594 0068 0A93     		str	r3, [sp, #40]
 165:src/main.c    ****   {
 595              		.loc 1 165 3 is_stmt 1 view .LVU166
 165:src/main.c    ****   {
 596              		.loc 1 165 7 is_stmt 0 view .LVU167
 597 006a 0121     		movs	r1, #1
 598 006c 06A8     		add	r0, sp, #24
 599 006e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 600              	.LVL17:
 165:src/main.c    ****   {
 601              		.loc 1 165 6 view .LVU168
 602 0072 0028     		cmp	r0, #0
 603 0074 0CD1     		bne	.L29
 169:src/main.c    ****   PeriphClkInit.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_PCLK1;
 604              		.loc 1 169 3 is_stmt 1 view .LVU169
 169:src/main.c    ****   PeriphClkInit.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_PCLK1;
 605              		.loc 1 169 38 is_stmt 0 view .LVU170
 606 0076 0423     		movs	r3, #4
 607 0078 0093     		str	r3, [sp]
 170:src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 608              		.loc 1 170 3 is_stmt 1 view .LVU171
 170:src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 609              		.loc 1 170 39 is_stmt 0 view .LVU172
 610 007a 0023     		movs	r3, #0
 611 007c 0393     		str	r3, [sp, #12]
 171:src/main.c    ****   {
 612              		.loc 1 171 3 is_stmt 1 view .LVU173
 171:src/main.c    ****   {
 613              		.loc 1 171 7 is_stmt 0 view .LVU174
 614 007e 6846     		mov	r0, sp
 615 0080 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 616              	.LVL18:
 171:src/main.c    ****   {
 617              		.loc 1 171 6 view .LVU175
 618 0084 0028     		cmp	r0, #0
 619 0086 05D1     		bne	.L30
 175:src/main.c    **** 
 620              		.loc 1 175 1 view .LVU176
 621 0088 19B0     		add	sp, sp, #100
 622              		@ sp needed
 623 008a 00BD     		pop	{pc}
 624              	.L28:
 153:src/main.c    ****   }
 625              		.loc 1 153 5 is_stmt 1 view .LVU177
 626 008c FFF7FEFF 		bl	Error_Handler
 627              	.LVL19:
 628              	.L29:
 167:src/main.c    ****   }
 629              		.loc 1 167 5 view .LVU178
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 24


 630 0090 FFF7FEFF 		bl	Error_Handler
 631              	.LVL20:
 632              	.L30:
 173:src/main.c    ****   }
 633              		.loc 1 173 5 view .LVU179
 634 0094 FFF7FEFF 		bl	Error_Handler
 635              	.LVL21:
 636              	.L32:
 637              		.align	2
 638              	.L31:
 639 0098 00700040 		.word	1073770496
 640 009c FFE7FFFF 		.word	-6145
 641              		.cfi_endproc
 642              	.LFE43:
 644              		.section	.text.main,"ax",%progbits
 645              		.align	1
 646              		.global	main
 647              		.syntax unified
 648              		.code	16
 649              		.thumb_func
 650              		.fpu softvfp
 652              	main:
 653              	.LFB42:
  79:src/main.c    ****   /* USER CODE BEGIN 1 */
 654              		.loc 1 79 1 view -0
 655              		.cfi_startproc
 656              		@ Volatile: function does not return.
 657              		@ args = 0, pretend = 0, frame = 8
 658              		@ frame_needed = 0, uses_anonymous_args = 0
 659 0000 10B5     		push	{r4, lr}
 660              	.LCFI10:
 661              		.cfi_def_cfa_offset 8
 662              		.cfi_offset 4, -8
 663              		.cfi_offset 14, -4
 664 0002 82B0     		sub	sp, sp, #8
 665              	.LCFI11:
 666              		.cfi_def_cfa_offset 16
  87:src/main.c    **** 
 667              		.loc 1 87 3 view .LVU181
 668 0004 FFF7FEFF 		bl	HAL_Init
 669              	.LVL22:
  94:src/main.c    **** 
 670              		.loc 1 94 3 view .LVU182
 671 0008 FFF7FEFF 		bl	SystemClock_Config
 672              	.LVL23:
 101:src/main.c    ****   MX_DMA_Init();
 673              		.loc 1 101 3 view .LVU183
 674 000c FFF7FEFF 		bl	MX_GPIO_Init
 675              	.LVL24:
 102:src/main.c    ****   MX_CRC_Init();
 676              		.loc 1 102 3 view .LVU184
 677 0010 FFF7FEFF 		bl	MX_DMA_Init
 678              	.LVL25:
 103:src/main.c    ****   MX_LPUART1_UART_Init();
 679              		.loc 1 103 3 view .LVU185
 680 0014 FFF7FEFF 		bl	MX_CRC_Init
 681              	.LVL26:
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 25


 104:src/main.c    ****   MX_SPI1_Init();
 682              		.loc 1 104 3 view .LVU186
 683 0018 FFF7FEFF 		bl	MX_LPUART1_UART_Init
 684              	.LVL27:
 105:src/main.c    ****   /* USER CODE BEGIN 2 */
 685              		.loc 1 105 3 view .LVU187
 686 001c FFF7FEFF 		bl	MX_SPI1_Init
 687              	.LVL28:
 107:src/main.c    ****   NVIC_EnableIRQ(LPUART1_IRQn);
 688              		.loc 1 107 3 view .LVU188
 689 0020 094C     		ldr	r4, .L35
 690 0022 0221     		movs	r1, #2
 691 0024 2000     		movs	r0, r4
 692 0026 FFF7FEFF 		bl	VICCOM_stm_init
 693              	.LVL29:
 108:src/main.c    ****   LPUART1->CR1 |= USART_CR1_RXNEIE;
 694              		.loc 1 108 3 view .LVU189
 695              	.LBB12:
 696              	.LBI12:
 697              		.file 3 "mcu-bsp/CMSIS/Include/core_cm0plus.h"
   1:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**************************************************************************//**
   2:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  * @file     core_cm0plus.h
   3:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  * @brief    CMSIS Cortex-M0+ Core Peripheral Access Layer Header File
   4:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  * @version  V5.0.7
   5:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  * @date     13. March 2019
   6:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
   7:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /*
   8:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  *
  10:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  * SPDX-License-Identifier: Apache-2.0
  11:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  *
  12:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  * not use this file except in compliance with the License.
  14:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  * You may obtain a copy of the License at
  15:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  *
  16:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  *
  18:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  * Unless required by applicable law or agreed to in writing, software
  19:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  * See the License for the specific language governing permissions and
  22:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  * limitations under the License.
  23:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
  24:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
  25:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #if   defined ( __ICCARM__ )
  26:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #elif defined (__clang__)
  28:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #pragma clang system_header   /* treat file as system include file */
  29:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #endif
  30:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
  31:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #ifndef __CORE_CM0PLUS_H_GENERIC
  32:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define __CORE_CM0PLUS_H_GENERIC
  33:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
  34:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #include <stdint.h>
  35:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
  36:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
  37:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  extern "C" {
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 26


  38:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #endif
  39:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
  40:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
  41:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
  44:mcu-bsp/CMSIS/Include/core_cm0plus.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:mcu-bsp/CMSIS/Include/core_cm0plus.h ****      Function definitions in header files are used to allow 'inlining'.
  46:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
  47:mcu-bsp/CMSIS/Include/core_cm0plus.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:mcu-bsp/CMSIS/Include/core_cm0plus.h ****      Unions are used for effective representation of core registers.
  49:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
  50:mcu-bsp/CMSIS/Include/core_cm0plus.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:mcu-bsp/CMSIS/Include/core_cm0plus.h ****      Function-like macros are used to allow more efficient code.
  52:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
  53:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
  54:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
  55:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
  56:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  *                 CMSIS definitions
  57:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
  58:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
  59:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \ingroup Cortex-M0+
  60:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   @{
  61:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
  62:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
  63:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #include "cmsis_version.h"
  64:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  
  65:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /*  CMSIS CM0+ definitions */
  66:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION_MAIN (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [3
  67:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION_SUB  (__CM_CMSIS_VERSION_SUB)                   /*!< \deprecated [1
  68:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION      ((__CM0PLUS_CMSIS_VERSION_MAIN << 16U) | \
  69:mcu-bsp/CMSIS/Include/core_cm0plus.h ****                                        __CM0PLUS_CMSIS_VERSION_SUB           )  /*!< \deprecated CM
  70:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
  71:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define __CORTEX_M                   (0U)                                       /*!< Cortex-M Core 
  72:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
  73:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     This core does not support an FPU at all
  75:mcu-bsp/CMSIS/Include/core_cm0plus.h **** */
  76:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define __FPU_USED       0U
  77:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
  78:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #if defined ( __CC_ARM )
  79:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #if defined __TARGET_FPU_VFP
  80:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #endif
  82:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
  83:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #if defined __ARM_FP
  85:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #endif
  87:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
  88:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #elif defined ( __GNUC__ )
  89:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  91:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #endif
  92:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
  93:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #elif defined ( __ICCARM__ )
  94:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #if defined __ARMVFP__
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 27


  95:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #endif
  97:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
  98:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #elif defined ( __TI_ARM__ )
  99:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #if defined __TI_VFP_SUPPORT__
 100:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #endif
 102:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 103:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #elif defined ( __TASKING__ )
 104:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #if defined __FPU_VFP__
 105:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #endif
 107:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 108:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #elif defined ( __CSMC__ )
 109:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #if ( __CSMC__ & 0x400U)
 110:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #endif
 112:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 113:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #endif
 114:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 115:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 117:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 118:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 119:mcu-bsp/CMSIS/Include/core_cm0plus.h **** }
 120:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #endif
 121:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 122:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #endif /* __CORE_CM0PLUS_H_GENERIC */
 123:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 124:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #ifndef __CMSIS_GENERIC
 125:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 126:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #ifndef __CORE_CM0PLUS_H_DEPENDANT
 127:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define __CORE_CM0PLUS_H_DEPENDANT
 128:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 129:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 130:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  extern "C" {
 131:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #endif
 132:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 133:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* check device defines and use defaults */
 134:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #if defined __CHECK_DEVICE_DEFINES
 135:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #ifndef __CM0PLUS_REV
 136:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     #define __CM0PLUS_REV             0x0000U
 137:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     #warning "__CM0PLUS_REV not defined in device header file; using default!"
 138:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #endif
 139:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 140:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #ifndef __MPU_PRESENT
 141:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     #define __MPU_PRESENT             0U
 142:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 143:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #endif
 144:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 145:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #ifndef __VTOR_PRESENT
 146:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     #define __VTOR_PRESENT            0U
 147:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
 148:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #endif
 149:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 150:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #ifndef __NVIC_PRIO_BITS
 151:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     #define __NVIC_PRIO_BITS          2U
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 28


 152:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 153:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #endif
 154:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 155:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #ifndef __Vendor_SysTickConfig
 156:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     #define __Vendor_SysTickConfig    0U
 157:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 158:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #endif
 159:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #endif
 160:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 161:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* IO definitions (access restrictions to peripheral registers) */
 162:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 163:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 164:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 165:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     <strong>IO Type Qualifiers</strong> are used
 166:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     \li to specify the access to peripheral variables.
 167:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     \li for automatic generation of peripheral register debug information.
 168:mcu-bsp/CMSIS/Include/core_cm0plus.h **** */
 169:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 170:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 171:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #else
 172:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 173:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #endif
 174:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 175:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 176:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 177:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* following defines should be used for structure members */
 178:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 179:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 180:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 181:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 182:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /*@} end of group Cortex-M0+ */
 183:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 184:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 185:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 186:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
 187:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  *                 Register Abstraction
 188:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   Core Register contain:
 189:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   - Core Register
 190:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   - Core NVIC Register
 191:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   - Core SCB Register
 192:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   - Core SysTick Register
 193:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   - Core MPU Register
 194:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
 195:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 196:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 197:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 198:mcu-bsp/CMSIS/Include/core_cm0plus.h **** */
 199:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 200:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 201:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 202:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 203:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief      Core Register type definitions.
 204:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   @{
 205:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
 206:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 207:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 208:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Application Program Status Register (APSR).
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 29


 209:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
 210:mcu-bsp/CMSIS/Include/core_cm0plus.h **** typedef union
 211:mcu-bsp/CMSIS/Include/core_cm0plus.h **** {
 212:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   struct
 213:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   {
 214:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 215:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 216:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 217:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 218:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 219:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 220:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 221:mcu-bsp/CMSIS/Include/core_cm0plus.h **** } APSR_Type;
 222:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 223:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* APSR Register Definitions */
 224:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 225:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 226:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 227:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 228:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 229:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 230:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 231:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 232:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 233:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 234:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 235:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 236:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 237:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 238:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 239:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
 240:mcu-bsp/CMSIS/Include/core_cm0plus.h **** typedef union
 241:mcu-bsp/CMSIS/Include/core_cm0plus.h **** {
 242:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   struct
 243:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   {
 244:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 245:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 246:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 247:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 248:mcu-bsp/CMSIS/Include/core_cm0plus.h **** } IPSR_Type;
 249:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 250:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* IPSR Register Definitions */
 251:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 252:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 253:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 254:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 255:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 256:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 257:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
 258:mcu-bsp/CMSIS/Include/core_cm0plus.h **** typedef union
 259:mcu-bsp/CMSIS/Include/core_cm0plus.h **** {
 260:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   struct
 261:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   {
 262:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 263:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 264:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 265:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 30


 266:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 267:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 268:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 269:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 270:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 271:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 272:mcu-bsp/CMSIS/Include/core_cm0plus.h **** } xPSR_Type;
 273:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 274:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* xPSR Register Definitions */
 275:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 276:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 277:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 278:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 279:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 280:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 281:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 282:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 283:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 284:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 285:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 286:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 287:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 288:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 289:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 290:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 291:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 292:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 293:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 294:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 295:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Control Registers (CONTROL).
 296:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
 297:mcu-bsp/CMSIS/Include/core_cm0plus.h **** typedef union
 298:mcu-bsp/CMSIS/Include/core_cm0plus.h **** {
 299:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   struct
 300:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   {
 301:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 302:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 303:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 304:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 305:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:mcu-bsp/CMSIS/Include/core_cm0plus.h **** } CONTROL_Type;
 307:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 308:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* CONTROL Register Definitions */
 309:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 310:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 311:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 312:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 313:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 314:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 315:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_CORE */
 316:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 317:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 318:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 319:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 320:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 321:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief      Type definitions for the NVIC Registers
 322:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   @{
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 31


 323:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
 324:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 325:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 326:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 327:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
 328:mcu-bsp/CMSIS/Include/core_cm0plus.h **** typedef struct
 329:mcu-bsp/CMSIS/Include/core_cm0plus.h **** {
 330:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 331:mcu-bsp/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED0[31U];
 332:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 333:mcu-bsp/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED1[31U];
 334:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 335:mcu-bsp/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED2[31U];
 336:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 337:mcu-bsp/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED3[31U];
 338:mcu-bsp/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED4[64U];
 339:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 340:mcu-bsp/CMSIS/Include/core_cm0plus.h **** }  NVIC_Type;
 341:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 342:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_NVIC */
 343:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 344:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 345:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 346:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 347:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 348:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the System Control Block Registers
 349:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   @{
 350:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
 351:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 352:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 353:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the System Control Block (SCB).
 354:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
 355:mcu-bsp/CMSIS/Include/core_cm0plus.h **** typedef struct
 356:mcu-bsp/CMSIS/Include/core_cm0plus.h **** {
 357:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 358:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 359:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
 360:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 361:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #else
 362:mcu-bsp/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED0;
 363:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #endif
 364:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 365:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 366:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 367:mcu-bsp/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED1;
 368:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 369:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 370:mcu-bsp/CMSIS/Include/core_cm0plus.h **** } SCB_Type;
 371:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 372:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* SCB CPUID Register Definitions */
 373:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 374:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 375:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 376:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 377:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 378:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 379:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 32


 380:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 381:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 382:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 383:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 384:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 385:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 386:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 387:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 388:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* SCB Interrupt Control State Register Definitions */
 389:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 390:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 391:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 392:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 393:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 394:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 395:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 396:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 397:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 398:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 399:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 400:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 401:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 402:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 403:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 404:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 405:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 406:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 407:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 408:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 409:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 410:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 411:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 412:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 413:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 414:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 415:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 416:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
 417:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* SCB Interrupt Control State Register Definitions */
 418:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_VTOR_TBLOFF_Pos                 8U                                            /*!< SCB 
 419:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_VTOR_TBLOFF_Msk                (0xFFFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 420:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #endif
 421:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 422:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 423:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 424:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 425:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 426:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 427:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 428:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 429:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 430:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 431:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 432:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 433:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 434:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 435:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 436:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 33


 437:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 438:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* SCB System Control Register Definitions */
 439:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 440:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 441:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 442:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 443:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 444:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 445:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 446:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 447:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 448:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* SCB Configuration Control Register Definitions */
 449:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 450:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 451:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 452:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 453:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 454:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 455:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* SCB System Handler Control and State Register Definitions */
 456:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 457:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 458:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 459:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_SCB */
 460:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 461:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 462:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 463:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 464:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 465:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the System Timer Registers.
 466:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   @{
 467:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
 468:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 469:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 470:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the System Timer (SysTick).
 471:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
 472:mcu-bsp/CMSIS/Include/core_cm0plus.h **** typedef struct
 473:mcu-bsp/CMSIS/Include/core_cm0plus.h **** {
 474:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 475:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 476:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 477:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 478:mcu-bsp/CMSIS/Include/core_cm0plus.h **** } SysTick_Type;
 479:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 480:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* SysTick Control / Status Register Definitions */
 481:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 482:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 483:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 484:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 485:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 486:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 487:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 488:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 489:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 490:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 491:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 492:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 493:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* SysTick Reload Register Definitions */
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 34


 494:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 495:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 496:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 497:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* SysTick Current Register Definitions */
 498:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 499:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 500:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 501:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* SysTick Calibration Register Definitions */
 502:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 503:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 504:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 505:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 506:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 507:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 508:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 509:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 510:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 511:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_SysTick */
 512:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 513:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
 514:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 515:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 516:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
 517:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
 518:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   @{
 519:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
 520:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 521:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 522:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
 523:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
 524:mcu-bsp/CMSIS/Include/core_cm0plus.h **** typedef struct
 525:mcu-bsp/CMSIS/Include/core_cm0plus.h **** {
 526:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
 527:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
 528:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
 529:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
 530:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
 531:mcu-bsp/CMSIS/Include/core_cm0plus.h **** } MPU_Type;
 532:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 533:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_RALIASES                  1U
 534:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 535:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* MPU Type Register Definitions */
 536:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
 537:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 538:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 539:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
 540:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 541:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 542:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
 543:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
 544:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 545:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* MPU Control Register Definitions */
 546:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
 547:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 548:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 549:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
 550:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 35


 551:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 552:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
 553:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
 554:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 555:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* MPU Region Number Register Definitions */
 556:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
 557:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
 558:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 559:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* MPU Region Base Address Register Definitions */
 560:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_ADDR_Pos                   8U                                            /*!< MPU 
 561:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_ADDR_Msk                  (0xFFFFFFUL << MPU_RBAR_ADDR_Pos)              /*!< MPU 
 562:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 563:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
 564:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 565:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 566:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
 567:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
 568:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 569:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* MPU Region Attribute and Size Register Definitions */
 570:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
 571:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
 572:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 573:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
 574:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
 575:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 576:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
 577:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
 578:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 579:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
 580:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
 581:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 582:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
 583:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
 584:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 585:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
 586:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
 587:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 588:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
 589:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
 590:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 591:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
 592:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
 593:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 594:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
 595:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 596:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 597:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
 598:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
 599:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 600:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_MPU */
 601:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #endif
 602:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 603:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 604:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 605:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 606:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 607:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief    Cortex-M0+ Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ov
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 36


 608:mcu-bsp/CMSIS/Include/core_cm0plus.h ****             Therefore they are not covered by the Cortex-M0+ header file.
 609:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   @{
 610:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
 611:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_CoreDebug */
 612:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 613:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 614:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 615:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 616:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 617:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 618:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   @{
 619:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
 620:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 621:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 622:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 623:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \param[in] field  Name of the register bit field.
 624:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
 625:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \return           Masked and shifted value.
 626:mcu-bsp/CMSIS/Include/core_cm0plus.h **** */
 627:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
 628:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 629:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 630:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 631:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \param[in] field  Name of the register bit field.
 632:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
 633:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \return           Masked and shifted bit field value.
 634:mcu-bsp/CMSIS/Include/core_cm0plus.h **** */
 635:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
 636:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 637:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_core_bitfield */
 638:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 639:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 640:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 641:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 642:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_core_base     Core Definitions
 643:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief      Definitions for base addresses, unions, and structures.
 644:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   @{
 645:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
 646:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 647:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* Memory mapping of Core Hardware */
 648:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 649:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 650:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 651:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 652:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 653:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 654:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 655:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 656:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 657:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
 658:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
 659:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
 660:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #endif
 661:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 662:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /*@} */
 663:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 664:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 37


 665:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 666:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
 667:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  *                Hardware Abstraction Layer
 668:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   Core Function Interface contains:
 669:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   - Core NVIC Functions
 670:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   - Core SysTick Functions
 671:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   - Core Register Access Functions
 672:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
 673:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 674:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 675:mcu-bsp/CMSIS/Include/core_cm0plus.h **** */
 676:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 677:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 678:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 679:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* ##########################   NVIC functions  #################################### */
 680:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 681:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_Core_FunctionInterface
 682:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 683:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 684:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   @{
 685:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
 686:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 687:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #ifdef CMSIS_NVIC_VIRTUAL
 688:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
 689:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
 690:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #endif
 691:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
 692:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #else
 693:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
 694:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
 695:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
 696:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
 697:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
 698:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
 699:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
 700:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
 701:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /*#define NVIC_GetActive              __NVIC_GetActive             not available for Cortex-M0+ */
 702:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
 703:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
 704:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
 705:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #endif /* CMSIS_NVIC_VIRTUAL */
 706:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 707:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #ifdef CMSIS_VECTAB_VIRTUAL
 708:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 709:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
 710:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #endif
 711:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 712:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #else
 713:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetVector              __NVIC_SetVector
 714:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetVector              __NVIC_GetVector
 715:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
 716:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 717:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define NVIC_USER_IRQ_OFFSET          16
 718:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 719:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 720:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
 721:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 38


 722:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
 723:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
 724:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 725:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 726:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* Interrupt Priorities are WORD accessible only under Armv6-M                  */
 727:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /* The following MACROS handle generation of the register offset and byte masks */
 728:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 729:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 730:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 731:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 732:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define __NVIC_SetPriorityGrouping(X) (void)(X)
 733:mcu-bsp/CMSIS/Include/core_cm0plus.h **** #define __NVIC_GetPriorityGrouping()  (0U)
 734:mcu-bsp/CMSIS/Include/core_cm0plus.h **** 
 735:mcu-bsp/CMSIS/Include/core_cm0plus.h **** /**
 736:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \brief   Enable Interrupt
 737:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
 738:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 739:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 740:mcu-bsp/CMSIS/Include/core_cm0plus.h ****  */
 741:mcu-bsp/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 698              		.loc 3 741 22 view .LVU190
 699              	.LBB13:
 742:mcu-bsp/CMSIS/Include/core_cm0plus.h **** {
 743:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 700              		.loc 3 743 3 view .LVU191
 744:mcu-bsp/CMSIS/Include/core_cm0plus.h ****   {
 745:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     __COMPILER_BARRIER();
 701              		.loc 3 745 5 view .LVU192
 746:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 702              		.loc 3 746 5 view .LVU193
 703              		.loc 3 746 20 is_stmt 0 view .LVU194
 704 002a 084B     		ldr	r3, .L35+4
 705 002c 8022     		movs	r2, #128
 706 002e 9205     		lsls	r2, r2, #22
 707 0030 1A60     		str	r2, [r3]
 747:mcu-bsp/CMSIS/Include/core_cm0plus.h ****     __COMPILER_BARRIER();
 708              		.loc 3 747 5 is_stmt 1 view .LVU195
 709              	.LVL30:
 710              		.loc 3 747 5 is_stmt 0 view .LVU196
 711              	.LBE13:
 712              	.LBE12:
 109:src/main.c    ****   uint8_t fakeBuffer[1];
 713              		.loc 1 109 3 is_stmt 1 view .LVU197
 109:src/main.c    ****   uint8_t fakeBuffer[1];
 714              		.loc 1 109 16 is_stmt 0 view .LVU198
 715 0032 074A     		ldr	r2, .L35+8
 716 0034 1368     		ldr	r3, [r2]
 717 0036 2021     		movs	r1, #32
 718 0038 0B43     		orrs	r3, r1
 719 003a 1360     		str	r3, [r2]
 110:src/main.c    ****   VICCOM_send(&state, fakeBuffer, 2);
 720              		.loc 1 110 3 is_stmt 1 view .LVU199
 111:src/main.c    **** 
 721              		.loc 1 111 3 view .LVU200
 722 003c 0222     		movs	r2, #2
 723 003e 01A9     		add	r1, sp, #4
 724 0040 2000     		movs	r0, r4
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 39


 725 0042 FFF7FEFF 		bl	VICCOM_send
 726              	.LVL31:
 727              	.L34:
 117:src/main.c    ****   {
 728              		.loc 1 117 3 discriminator 1 view .LVU201
 123:src/main.c    ****   /* USER CODE END 3 */
 729              		.loc 1 123 3 discriminator 1 view .LVU202
 117:src/main.c    ****   {
 730              		.loc 1 117 9 discriminator 1 view .LVU203
 731 0046 FEE7     		b	.L34
 732              	.L36:
 733              		.align	2
 734              	.L35:
 735 0048 00000000 		.word	.LANCHOR2
 736 004c 00E100E0 		.word	-536813312
 737 0050 00480040 		.word	1073760256
 738              		.cfi_endproc
 739              	.LFE42:
 741              		.global	state
 742              		.global	hspi1
 743              		.global	hdma_lpuart1_tx
 744              		.global	hdma_lpuart1_rx
 745              		.global	hlpuart1
 746              		.global	hcrc
 747              		.section	.bss.hcrc,"aw",%nobits
 748              		.align	2
 749              		.set	.LANCHOR0,. + 0
 752              	hcrc:
 753 0000 00000000 		.space	36
 753      00000000 
 753      00000000 
 753      00000000 
 753      00000000 
 754              		.section	.bss.hdma_lpuart1_rx,"aw",%nobits
 755              		.align	2
 758              	hdma_lpuart1_rx:
 759 0000 00000000 		.space	72
 759      00000000 
 759      00000000 
 759      00000000 
 759      00000000 
 760              		.section	.bss.hdma_lpuart1_tx,"aw",%nobits
 761              		.align	2
 764              	hdma_lpuart1_tx:
 765 0000 00000000 		.space	72
 765      00000000 
 765      00000000 
 765      00000000 
 765      00000000 
 766              		.section	.bss.hlpuart1,"aw",%nobits
 767              		.align	2
 770              	hlpuart1:
 771 0000 00000000 		.space	132
 771      00000000 
 771      00000000 
 771      00000000 
 771      00000000 
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 40


 772              		.section	.bss.hspi1,"aw",%nobits
 773              		.align	2
 774              		.set	.LANCHOR1,. + 0
 777              	hspi1:
 778 0000 00000000 		.space	88
 778      00000000 
 778      00000000 
 778      00000000 
 778      00000000 
 779              		.section	.bss.state,"aw",%nobits
 780              		.align	2
 781              		.set	.LANCHOR2,. + 0
 784              	state:
 785 0000 00000000 		.space	20
 785      00000000 
 785      00000000 
 785      00000000 
 785      00000000 
 786              		.text
 787              	.Letext0:
 788              		.file 4 "mcu-bsp/CMSIS/Device/ST/STM32L0xx/Include/stm32l011xx.h"
 789              		.file 5 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-m
 790              		.file 6 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-m
 791              		.file 7 "mcu-bsp/peripherals/stm32l0xx/inc/stm32l0xx_hal_def.h"
 792              		.file 8 "mcu-bsp/peripherals/stm32l0xx/inc/stm32l0xx_hal_rcc.h"
 793              		.file 9 "mcu-bsp/peripherals/stm32l0xx/inc/stm32l0xx_hal_rcc_ex.h"
 794              		.file 10 "mcu-bsp/peripherals/stm32l0xx/inc/stm32l0xx_hal_gpio.h"
 795              		.file 11 "mcu-bsp/peripherals/stm32l0xx/inc/stm32l0xx_hal_dma.h"
 796              		.file 12 "mcu-bsp/peripherals/stm32l0xx/inc/stm32l0xx_hal_crc.h"
 797              		.file 13 "mcu-bsp/peripherals/stm32l0xx/inc/stm32l0xx_hal_spi.h"
 798              		.file 14 "mcu-bsp/peripherals/stm32l0xx/inc/stm32l0xx_hal_uart.h"
 799              		.file 15 "src/../mcu-bsp/lib/inc/viccom.h"
 800              		.file 16 "mcu-bsp/peripherals/stm32l0xx/inc/stm32l0xx_hal_cortex.h"
 801              		.file 17 "mcu-bsp/peripherals/stm32l0xx/inc/stm32l0xx_hal.h"
 802              		.file 18 "<built-in>"
ARM GAS  C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s 			page 41


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:16     .text.MX_GPIO_Init:00000000 $t
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:166    .text.MX_GPIO_Init:00000094 $d
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:172    .text.MX_DMA_Init:00000000 $t
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:178    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:225    .text.MX_DMA_Init:0000002c $d
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:230    .text.Error_Handler:00000000 $t
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:237    .text.Error_Handler:00000000 Error_Handler
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:269    .text.MX_CRC_Init:00000000 $t
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:275    .text.MX_CRC_Init:00000000 MX_CRC_Init
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:325    .text.MX_CRC_Init:00000024 $d
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:331    .text.MX_LPUART1_UART_Init:00000000 $t
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:337    .text.MX_LPUART1_UART_Init:00000000 MX_LPUART1_UART_Init
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:399    .text.MX_LPUART1_UART_Init:00000030 $d
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:770    .bss.hlpuart1:00000000 hlpuart1
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:406    .text.MX_SPI1_Init:00000000 $t
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:412    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:484    .text.MX_SPI1_Init:00000038 $d
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:490    .text.SystemClock_Config:00000000 $t
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:497    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:639    .text.SystemClock_Config:00000098 $d
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:645    .text.main:00000000 $t
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:652    .text.main:00000000 main
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:735    .text.main:00000048 $d
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:784    .bss.state:00000000 state
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:777    .bss.hspi1:00000000 hspi1
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:764    .bss.hdma_lpuart1_tx:00000000 hdma_lpuart1_tx
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:758    .bss.hdma_lpuart1_rx:00000000 hdma_lpuart1_rx
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:752    .bss.hcrc:00000000 hcrc
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:748    .bss.hcrc:00000000 $d
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:755    .bss.hdma_lpuart1_rx:00000000 $d
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:761    .bss.hdma_lpuart1_tx:00000000 $d
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:767    .bss.hlpuart1:00000000 $d
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:773    .bss.hspi1:00000000 $d
C:\Users\vic_user\AppData\Local\Temp\ccH54D3G.s:780    .bss.state:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_CRC_Init
HAL_UART_Init
HAL_SPI_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
VICCOM_stm_init
VICCOM_send
